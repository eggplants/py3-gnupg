name: Test

on:
  push:
  pull_request:
  schedule:
  - cron: 7 3 7 * *

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', 3.x]

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        cache: pip
        cache-dependency-path: poetry.lock
        python-version: ${{ matrix.python-version }}
    - uses: abatilo/actions-poetry@v3
    - run: poetry install --no-interaction

    - name: Install winget
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        $env:PATH = "C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin"
        [Environment]::SetEnvironmentVariable("Path", $env:PATH, "Machine")
        choco install gnupg
        echo "C:\Program Files (x86)\GnuPG\bin" >> $env:GITHUB_PATH

    - name: Test
      if: ${{ runner.os != 'Linux' }}
      run: |
        gpg --version
        poetry run task test
    - name: Test & publish code coverage
      if: ${{ runner.os == 'Linux' && env.CC_TEST_REPORTER_ID != '' }}
      uses: paambaati/codeclimate-action@v8.0.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: poetry run task test:ci
        coverageLocations: ${{github.workspace}}/cov.xml:coverage.py
        debug: true
